server:
  port: ${env.APP_PORT}
  servlet:
    context-path: '/api'
spring:
  kafka:
    bootstrap-servers: ${env.KAFKA_BOOTSTRAP_SERVERS}
    properties:
      security.protocol: SASL_SSL
      sasl.mechanism: SCRAM-SHA-512
      sasl.jaas.config: >
        org.apache.kafka.common.security.scram.ScramLoginModule required
        username=${env.KAFKA_USERNAME}
        password=${env.KAFKA_PASSWORD};
    consumer:
      group-id: order-service
      key-deserializer: org.apache.kafka.common.serialization.StringDeserializer
      value-deserializer: org.apache.kafka.common.serialization.StringDeserializer

    producer:
      key-serializer: org.apache.kafka.common.serialization.StringSerializer
      value-serializer: org.springframework.kafka.support.serializer.JsonSerializer
      
  datasource:
    url: ${env.MYSQL_URL}
    username: ${env.MYSQL_USERNAME}
    password: ${env.MYSQL_PASSWORD}
    driver-class-name: com.mysql.cj.jdbc.Driver
  jpa:
    show-sql: true
    hibernate:
      ddl-auto: update
  application:
    name: order-service
other:
  discount-service-url: ${env.DISCOUNT_SERVICE_URL}


