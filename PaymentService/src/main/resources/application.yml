server:
  port: ${env.APP_PORT}
spring:
  kafka:
    bootstrap-servers: ${env.KAFKA_BOOTSTRAP_SERVERS}
    properties:
      security.protocol: SASL_SSL
      sasl.mechanism: SCRAM-SHA-512
      sasl.jaas.config: >
        org.apache.kafka.common.security.scram.ScramLoginModule required
        username=${env.KAFKA_USERNAME}
        password=${env.KAFKA_PASSWORD};
    consumer:
      group-id: payment-service
      key-deserializer: org.apache.kafka.common.serialization.StringDeserializer
      value-deserializer: org.apache.kafka.common.serialization.StringDeserializer

    producer:
      key-serializer: org.apache.kafka.common.serialization.StringSerializer
      value-serializer: org.springframework.kafka.support.serializer.JsonSerializer
  application:
    name: payment-service
  datasource:
    url: ${env.MYSQL_URL}
    username: ${env.MYSQL_USERNAME}
    password: ${env.MYSQL_PASSWORD}
    driver-class-name: com.mysql.cj.jdbc.Driver
  jpa:
    show-sql: true
    hibernate:
      ddl-auto: update
paypal:
  client-id: AfBrF7ySZvH5pSkbynwUNLPZJI4oltV_gp8fZkcP_wDoauhO-Dyn1-wnXfJL-NC1SzuwDDGPFoNmPboY
  client-secret: EOObGNURwiHZT_2HSuzwT2JWefXITqnnrJ6mKIYcEP8xtIBdrWpV3jnSksBOCXG2DecpFCFYToyLi6VV
  mode: sandbox
  intent: sale
  cancel-url: http://localhost:8001/api/payments/PAYPAL/cancel
  return-url: http://localhost:8001/api/payments/PAYPAL/inspect
vnpay:
  vnp_TmnCode: 8XJ7YD7U
  vnp_HashSecret: P4FTEHDB1QTXI1UEKH85LR8WZO0Z2X6C
  vnp_Url: https://sandbox.vnpayment.vn/paymentv2/vpcpay.html
  vnp_Version: 2.1.0
  vnp_Command: pay
  orderType: other
  vnp_CurrCode: VND
  vnp_returnUrl: http://localhost:8001/api/payments/VNPAY/inspect
url:
  error-url: http://localhost:8001/api/payments/error


